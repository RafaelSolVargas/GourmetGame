<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>